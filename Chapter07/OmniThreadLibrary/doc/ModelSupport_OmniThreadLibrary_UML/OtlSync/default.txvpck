<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="wjuk5y3xjnmdxkjer_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.FLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.FLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.FValue" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.FInitialized" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.FLifecycle" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.FOwnsObject" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Clear()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.GetValue()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Create(T,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.operator Implicit(OtlSync.Locked&lt;1&gt;)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.operator Implicit(T)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Initialize(OtlSync.Locked&lt;1&gt;.TFactory)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Initialize()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Acquire()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Locked(System.SysUtils.TProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Locked(OtlSync.Locked&lt;1&gt;.TProcT)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Release()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Free()" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.Value" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.TFactory" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.Locked&lt;1&gt;.TProcT" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TWaitFor">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FResourceCount" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FAwaitedLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FAwaitedLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FHandles" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FIdxSignalled" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FResourceCount" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FSignal" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FSignalledHandles" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FWaitHandles" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.FWaitMode" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.GetWaitHandles()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.MapToHandle(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.MapToResult(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.RegisterWaitHandles(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.UnregisterWaitHandles()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.Awaited_Asy(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.Create()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.Create(System.Cardinal[])" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.MsgWaitAny(System.Cardinal,System.Cardinal,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.SetHandles(System.Cardinal[])" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.WaitAll(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.WaitAny(System.Cardinal,System.Boolean)" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.Signalled" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.WaitHandles" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.TWaitMode" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.TWaiter" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.TWaitResult" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TWaitFor.THandleInfo" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.Atomic&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Atomic&lt;1&gt;.Initialize(ref@T,OtlSync.Atomic`1.TFactory)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.Atomic&lt;1&gt;.Initialize(ref@T)" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.Atomic&lt;1&gt;.TFactory" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniMREW">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniMREW.omrewReference" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniMREW.EnterReadLock()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniMREW.EnterWriteLock()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniMREW.ExitReadLock()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniMREW.ExitWriteLock()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniMREW.TryEnterReadLock()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniMREW.TryEnterWriteLock()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TFixedCriticalSection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TFixedCriticalSection.FDummy" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;:OtlSync.IOmniLockManager&lt;1&gt;" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.FLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.FComparer" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.FLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.FLockList" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.FNotifyList" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.CreateInterface(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.CreateInterface(System.Generics.Defaults.IEqualityComparer&lt;K&gt;,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.Create(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.Create(System.Generics.Defaults.IEqualityComparer&lt;K&gt;,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.Lock(K,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.LockUnlock(K,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.Unlock(K)" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.TNotifyPair" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.TLockValue" />
      <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniLockManager&lt;1&gt;.TAutoUnlock" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken:OtlSync.IOmniCancellationToken" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.octEvent" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.octIsSignalled" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.GetHandle()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.Create()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.Clear()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.IsSignalled()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.Signal()" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.TOmniCancellationToken.Handle" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount:OtlSync.IOmniResourceCount" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.orcLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.orcAvailable" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.orcHandle" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.orcLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.orcNumResources" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.GetHandle()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.Create(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.Allocate()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.Release()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.TryAllocate(ref@System.Cardinal,System.Cardinal)" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.TOmniResourceCount.Handle" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.IOmniResourceCount">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniResourceCount.GetHandle()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniResourceCount.Allocate()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniResourceCount.Release()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniResourceCount.TryAllocate(ref@System.Cardinal,System.Cardinal)" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.IOmniResourceCount.Handle" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.IOmniLockManager&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniLockManager&lt;1&gt;.Lock(K,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniLockManager&lt;1&gt;.LockUnlock(K,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniLockManager&lt;1&gt;.Unlock(K)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.IOmniCriticalSection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniCriticalSection.GetLockCount()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniCriticalSection.Acquire()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniCriticalSection.Release()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniCriticalSection.GetSyncObj()" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.IOmniCriticalSection.LockCount" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection:OtlSync.IOmniCriticalSection" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection.ocsCritSect" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection.ocsLockCount" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection.Create()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection.Acquire()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection.GetLockCount()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection.GetSyncObj()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCriticalSection.Release()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniSingleThreadUseChecker">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlSync.TOmniSingleThreadUseChecker.FLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniSingleThreadUseChecker.FLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniSingleThreadUseChecker.FThreadID" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniSingleThreadUseChecker.AttachToCurrentThread()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniSingleThreadUseChecker.Check()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniSingleThreadUseChecker.DebugCheck()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlSync.@unitclass.GOmniCancellationToken" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CreateOmniCriticalSection()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CreateOmniCancellationToken()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CreateResourceCount(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.NInterlockedExchangeAdd(ref@,System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CAS8(System.Byte,System.Byte,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CAS16(System.Word,System.Word,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CAS32(System.Cardinal,System.Cardinal,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CAS32(System.Pointer,System.Pointer,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CAS64(System.Int64,System.Int64,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CAS(System.NativeInt,System.NativeInt,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CAS(System.Pointer,System.Pointer,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CAS(System.Pointer,System.NativeInt,System.Pointer,System.NativeInt,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.Move64(ref@,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.Move64(System.Pointer,System.Cardinal,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.Move128(ref@,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.MoveDPtr(ref@,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.MoveDPtr(System.Pointer,System.NativeInt,ref@)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.WaitForAllObjects(System.Cardinal[],System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.GetThreadId()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.GetCPUTimeStamp()" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.@unitclass.GOmniCancellationToken" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.@unitclass.CASAlignment" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.MFence()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.@unitclass.WaitForCallback(System.Pointer,System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.IOmniLockManagerAutoUnlock">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniLockManagerAutoUnlock.Unlock()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.IOmniCancellationToken">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniCancellationToken.GetHandle()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniCancellationToken.Clear()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniCancellationToken.IsSignalled()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.IOmniCancellationToken.Signal()" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.IOmniCancellationToken.Handle" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlSync.TOmniCS">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.ocsSync" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.ocsSync" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.GetLockCount()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.GetSyncObj()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.Initialize()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.Acquire()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.Release()" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.LockCount" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlSync.TOmniCS.SyncObj" />
    </reference>
  </view>
</nodeSet>