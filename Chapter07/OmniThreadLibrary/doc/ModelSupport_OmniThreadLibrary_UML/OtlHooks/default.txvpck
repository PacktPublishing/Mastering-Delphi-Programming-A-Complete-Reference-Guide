<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="mv6v9rdz3ukonoj0l_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.efList" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.efList" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.Create()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.Register(OtlHooks.TExceptionFilterProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.Register(OtlHooks.TExceptionFilterMeth)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.Unregister(OtlHooks.TExceptionFilterProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.Unregister(OtlHooks.TExceptionFilterMeth)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilters.Filter(ref@System.SysUtils.Exception)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotificationProc">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilterMeth">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.GExceptionFilters" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.GThreadNotifications" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.RegisterThreadNotification(OtlHooks.TThreadNotificationProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.RegisterThreadNotification(OtlHooks.TThreadNotificationMeth)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.UnregisterThreadNotification(OtlHooks.TThreadNotificationProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.UnregisterThreadNotification(OtlHooks.TThreadNotificationMeth)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.SendThreadNotifications(OtlHooks.TThreadNotificationType,System.string)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.RegisterExceptionFilter(OtlHooks.TExceptionFilterProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.RegisterExceptionFilter(OtlHooks.TExceptionFilterMeth)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.UnregisterExceptionFilter(OtlHooks.TExceptionFilterProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.UnregisterExceptionFilter(OtlHooks.TExceptionFilterMeth)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.FilterException(ref@System.SysUtils.Exception)" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.GExceptionFilters" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlHooks.@unitclass.GThreadNotifications" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.tnList" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.tnList" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.Create()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.Notify(OtlHooks.TThreadNotificationType,System.string)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.Register(OtlHooks.TThreadNotificationProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.Register(OtlHooks.TThreadNotificationMeth)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.Unregister(OtlHooks.TThreadNotificationProc)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotifications.Unregister(OtlHooks.TThreadNotificationMeth)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.pmlLock" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.Add(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.Find(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.Remove(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.Add(System.TMethod)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.Add(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.EnterReadLock()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.ExitReadLock()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.Remove(System.TMethod)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlHooks.TProcMethodList.Remove(System.Pointer)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.TExceptionFilterProc">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotificationType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotificationType.tntCreate" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotificationType.tntDestroy" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlHooks.TThreadNotificationMeth">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>