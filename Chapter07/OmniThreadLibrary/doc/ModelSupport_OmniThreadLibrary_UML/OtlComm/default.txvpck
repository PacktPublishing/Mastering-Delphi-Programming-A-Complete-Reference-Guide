<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="hviy5gyuajk37go2l_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.OnMessage" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.mqWinEventObserver" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.mqWinMsgObserver" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.AttachWinEventObserver()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.SetOnMessage(OtlComm.TOmniMessageQueueMessageEvent)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.WndProc(ref@Winapi.Messages.TMessage)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.Create(System.Integer,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.Dequeue()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.Enqueue(OtlComm.TOmniMessage)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.Empty()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.GetNewMessageEvent()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.TryDequeue(ref@OtlComm.TOmniMessage)" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.EventObserver" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueue.OnMessage" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueMessageEvent">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee:OtlComm.IOmniMessageQueueTee" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee.obqtQueueList" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee.obqtQueueLock" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee.Create()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee.Attach(OtlComm.TOmniMessageQueue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee.Detach(OtlComm.TOmniMessageQueue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessageQueueTee.Enqueue(OtlComm.TOmniMessage)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.@unitclass.COtlReservedMsgID" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.@unitclass.CMaxSendWaitTime_ms" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.@unitclass.CDefaultQueueSize" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.@unitclass.CreateDispatchingObserver(OtlComm.TOmniMessageQueue,System.TObject)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.@unitclass.CreateTwoWayChannel(System.Integer,System.Cardinal)" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.@unitclass.MSG_CLIENT_MESSAGE" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Writer" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Reader" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.OtherEndpoint" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.GetNewMessageEvent()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.GetOtherEndpoint()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.GetReader()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.GetWriter()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Receive(ref@OtlComm.TOmniMessage)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Receive(ref@System.Word,ref@OtlCommon.TOmniValue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.ReceiveWait(ref@OtlComm.TOmniMessage,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.ReceiveWait(ref@System.Word,ref@OtlCommon.TOmniValue,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Send(OtlComm.TOmniMessage)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Send(System.Word)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Send(System.Word,System.TVarRec[])" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Send(System.Word,OtlCommon.TOmniValue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.SendWait(System.Word,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.SendWait(System.Word,OtlCommon.TOmniValue,System.Cardinal)" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.NewMessageEvent" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.OtherEndpoint" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Reader" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpoint.Writer" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpointInternal">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniCommunicationEndpointInternal.DetachFromQueues()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.TOmniMessage">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniMessage.MsgID" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniMessage.MsgData" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessage.Create(System.Word,OtlCommon.TOmniValue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniMessage.Create(System.Word)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.twcEndpoint" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.twcUnidirQueue" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel:OtlComm.IOmniTwoWayChannel" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.twcEndpoint" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.twcLock" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.twcMessageQueueSize" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.twcTaskTerminatedEvt_ref" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.twcUnidirQueue" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.CreateBuffers()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.OtherEndpoint(OtlComm.IOmniCommunicationEndpoint)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.Create(System.Integer,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.Destroy()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.Endpoint1()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniTwoWayChannel.Endpoint2()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.IOmniCommDispatchingObserver">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.IOmniTwoWayChannel">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniTwoWayChannel.Endpoint1()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniTwoWayChannel.Endpoint2()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl:OtlComm.IOmniCommDispatchingObserver" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl.cdoQueue" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl.cdoDispatchTo" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl.cdoDispatchWnd" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl.cdoObserver" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl.cdoQueue" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl.WndProc(ref@Winapi.Messages.TMessage)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl.Create(OtlComm.TOmniMessageQueue,System.TObject)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommDispatchingObserverImpl.Destroy()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.IOmniMessageQueueTee">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniMessageQueueTee.Attach(OtlComm.TOmniMessageQueue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniMessageQueueTee.Detach(OtlComm.TOmniMessageQueue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.IOmniMessageQueueTee.Enqueue(OtlComm.TOmniMessage)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ceReader_ref" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ceOwner_ref" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint:OtlComm.IOmniCommunicationEndpointInternal" />
      <reference referencedUin="delphi:l_impl:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint:OtlComm.IOmniCommunicationEndpoint" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Writer" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Reader" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.OtherEndpoint" />
      <reference referencedUin="delphi:l_ast:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ceWriter_ref" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ceOwner_ref" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ceReader_ref" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ceTaskTerminatedEvent_ref" />
      <reference referencedUin="delphi:e_field:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ceWriter_ref" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.DetachFromQueues()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.GetNewMessageEvent()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.GetOtherEndpoint()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.GetReader()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.GetWriter()" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Create(OtlComm.TOmniTwoWayChannel,OtlComm.TOmniMessageQueue,OtlComm.TOmniMessageQueue,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Receive(ref@OtlComm.TOmniMessage)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Receive(ref@System.Word,ref@OtlCommon.TOmniValue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ReceiveWait(ref@OtlComm.TOmniMessage,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.ReceiveWait(ref@System.Word,ref@OtlCommon.TOmniValue,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Send(System.Word)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Send(System.Word,System.TVarRec[])" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Send(System.Word,OtlCommon.TOmniValue)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Send(OtlComm.TOmniMessage)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.SendWait(System.Word,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.SendWait(System.Word,OtlCommon.TOmniValue,System.Cardinal)" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.NewMessageEvent" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.OtherEndpoint" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Reader" />
      <reference referencedUin="delphi:e_property:src:OmniThreadLibrary_UML:OtlComm.TOmniCommunicationEndpoint.Writer" />
    </reference>
  </view>
</nodeSet>